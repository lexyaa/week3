// ---------------------------------------------------------------
// Mux
// ---------------------------------------------------------------
module mux2(        y,
                    d0, 
                    d1,
                    s  );

parameter N = 1         ;

output [N-1:0]      y   ;

input  [N-1:0]      d0  ;
input  [N-1:0]      d1  ;
input               s   ;

assign              y = s ? d0 : d1  ;

endmodule

// ---------------------------------------------------------------
// 4:1 MUX
// ---------------------------------------------------------------
module mux4(        y,
                    d0,
                    d1,
                    s  );

parameter N = 2         ;

output              y   ;

input  [N-1:0]      d0  ;
input  [N-1:0]      d1  ;
input  [N-1:0]      s   ;

wire                c0  ; // connects mux2_uo with mux2_u2
wire                c1  ; // connects mux2_u1 eith mux2_u2

mux2 mux2_u0( .d0 ( d0[0] ),
              .d1 ( d1[0] ),
              .s  ( s[0]  ),
              .c0 ( c0    ));

mux2 mux2_u1( .d0 ( d0[1] ),
              .d1 ( d1[1] ),
              .s  ( s[0]  ),
              .c0 ( c1    ));

mux2 mux2_u2( .d0 ( c0    ),
              .d1 ( c1    ),
              .s  ( s[1]  ),
              .c0 ( y     ));

endmodule
